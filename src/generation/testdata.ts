// 1000 data!
// prettier-ignore
export const sortsBigArray = [5, 8, 2, 1, 9, 4, 7, 8, 8, 1, 9, 9, 8, 1, 2, 2, 0, 7, 6, 4, 9, 5, 9, 8, 4, 8, 3, 3, 8, 9, 6, 4, 7, 7, 5, 7, 5, 2, 8, 7, 8, 2, 0, 2, 3, 1, 1, 5, 2, 0, 0, 4, 4, 4, 2, 6, 5, 0, 6, 7, 4, 9, 3, 9, 4, 7, 4, 9, 7, 7, 3, 8, 3, 8, 3, 8, 5, 7, 8, 8, 6, 8, 4, 1, 6, 7, 7, 8, 6, 0, 7, 3, 2, 3, 4, 8, 0, 7, 0, 2, 5, 8, 4, 6, 7, 1, 8, 8, 7, 8, 4, 7, 1, 2, 5, 6, 2, 2, 4, 3, 5, 6, 3, 9, 2, 5, 5, 1, 7, 3, 1, 7, 5, 8, 3, 2, 7, 7, 5, 0, 2, 3, 4, 9, 1, 0, 6, 3, 1, 7, 2, 9, 3, 2, 9, 8, 3, 2, 0, 5, 4, 8, 8, 9, 8, 7, 9, 4, 2, 6, 9, 7, 5, 9, 9, 3, 6, 6, 0, 6, 1, 3, 6, 2, 7, 9, 7, 2, 1, 8, 6, 7, 1, 5, 7, 5, 9, 9, 9, 2, 9, 0, 9, 7, 5, 8, 2, 9, 2, 0, 6, 1, 6, 9, 6, 2, 0, 7, 0, 5, 4, 8, 6, 9, 5, 7, 2, 1, 0, 7, 2, 3, 9, 8, 4, 9, 6, 0, 5, 6, 9, 3, 9, 1, 2, 9, 6, 8, 2, 4, 6, 5, 7, 6, 1, 4, 2, 8, 9, 7, 6, 2, 3, 0, 9, 5, 5, 2, 5, 0, 6, 1, 4, 1, 2, 2, 9, 1, 0, 0, 6, 2, 2, 6, 6, 2, 6, 2, 5, 7, 2, 5, 7, 4, 5, 9, 2, 6, 0, 1, 2, 4, 3, 0, 4, 9, 2, 9, 7, 3, 3, 3, 8, 2, 4, 4, 2, 4, 3, 8, 1, 4, 1, 7, 2, 4, 8, 3, 7, 4, 9, 4, 8, 3, 4, 7, 4, 7, 5, 2, 0, 2, 3, 3, 2, 5, 2, 7, 3, 7, 8, 7, 8, 6, 6, 8, 0, 2, 5, 8, 5, 8, 3, 3, 2, 5, 2, 1, 6, 2, 1, 3, 2, 2, 8, 1, 7, 0, 4, 0, 8, 1, 6, 0, 2, 8, 4, 6, 8, 6, 8, 3, 0, 3, 0, 7, 9, 6, 2, 1, 8, 2, 4, 9, 8, 0, 9, 6, 8, 8, 2, 3, 6, 5, 1, 9, 3, 5, 0, 4, 5, 9, 7, 2, 6, 8, 5, 0, 4, 4, 5, 8, 9, 1, 8, 3, 6, 0, 8, 9, 5, 6, 1, 2, 8, 6, 4, 8, 5, 5, 9, 2, 6, 0, 6, 0, 9, 0, 6, 6, 0, 4, 3, 4, 5, 6, 0, 6, 4, 2, 4, 2, 9, 0, 0, 6, 3, 9, 6, 8, 0, 2, 5, 1, 4, 5, 8, 3, 8, 3, 3, 1, 1, 6, 4, 8, 0, 3, 7, 4, 3, 7, 3, 3, 0, 6, 4, 2, 4, 5, 4, 7, 8, 4, 2, 6, 4, 0, 0, 9, 4, 2, 3, 5, 3, 4, 1, 1, 4, 1, 1, 2, 0, 2, 1, 8, 8, 9, 2, 6, 3, 9, 4, 6, 4, 0, 3, 7, 7, 0, 2, 4, 5, 8, 1, 7, 3, 2, 2, 2, 2, 6, 8, 0, 9, 1, 9, 9, 3, 5, 1, 4, 4, 8, 0, 9, 9, 5, 8, 1, 1, 0, 8, 9, 1, 1, 8, 6, 9, 5, 6, 3, 2, 0, 5, 9, 6, 9, 5, 1, 1, 8, 3, 6, 3, 8, 5, 5, 6, 9, 6, 6, 0, 7, 5, 6, 5, 8, 0, 4, 9, 9, 8, 8, 2, 4, 2, 3, 8, 8, 2, 6, 7, 4, 0, 8, 8, 8, 8, 6, 1, 3, 7, 3, 8, 7, 6, 9, 1, 5, 5, 2, 8, 4, 1, 8, 9, 3, 8, 9, 0, 5, 7, 7, 8, 8, 3, 3, 7, 9, 3, 5, 4, 0, 0, 5, 5, 0, 8, 3, 2, 7, 1, 3, 2, 6, 4, 8, 6, 2, 5, 4, 9, 8, 5, 5, 0, 5, 3, 7, 6, 6, 1, 6, 9, 6, 1, 1, 0, 1, 6, 0, 6, 7, 1, 9, 6, 2, 8, 4, 6, 7, 3, 1, 8, 7, 6, 9, 6, 6, 9, 1, 4, 4, 7, 7, 1, 7, 3, 4, 5, 5, 1, 9, 0, 7, 6, 7, 4, 5, 1, 4, 5, 3, 2, 0, 6, 6, 6, 2, 4, 9, 2, 6, 2, 9, 8, 9, 5, 5, 2, 5, 5, 4, 6, 7, 1, 8, 1, 2, 6, 8, 5, 5, 5, 0, 0, 6, 5, 5, 1, 3, 9, 7, 4, 3, 4, 6, 2, 9, 8, 6, 6, 4, 7, 6, 1, 3, 0, 7, 7, 3, 8, 0, 7, 8, 5, 4, 1, 3, 2, 2, 5, 1, 2, 0, 6, 3, 7, 3, 8, 1, 0, 3, 6, 3, 9, 1, 4, 2, 3, 4, 7, 2, 5, 8, 5, 8, 2, 8, 7, 3, 4, 9, 4, 4, 5, 3, 8, 2, 5, 4, 5, 5, 5, 4, 1, 5, 2, 2, 4, 3, 7, 5, 2, 1, 0, 4, 1, 7, 2, 3, 1, 8, 4, 5, 3, 3, 7, 9, 9, 2, 5, 3, 2, 2, 6, 4, 9, 6, 8, 9, 5, 5, 8, 8, 3, 3, 3, 6, 8, 3, 3, 8, 7, 2, 0, 7, 8, 8, 4, 8, 9, 7, 4, 0, 1, 6, 0, 8, 7, 2, 4, 2, 6, 8, 8, 6, 8, 2, 3, 8, 3, 9, 4, 7, 8, 7, 4, 5, 4, 4, 3, 2, 7, 0, 9, 0, 0, 6, 3, 3, 9, 9, 6, 2, 3, 8, 5, 9, 7, 6, 4, 7, 0, 1, 1, 2, 4, 4, 8, 0, 9, 1, 9, 8, 7, 0, 6, 9, 5, 2, 5, 2, 6, 2, 0, 6, 5, 5];

export type SpanningTreeTestArg = {
  h: number;
  w: number;
  weightsRight: number[][];
  weightsBottom: number[][];
  minimumTree: [[number, number], [number, number]][];
  desc: string;
};
export const spanningTreeTests: SpanningTreeTestArg[] = [
  {
    h: 3,
    w: 4,
    weightsRight: [
      [0, 1, 2],
      [3, 4, 5],
      [6, 7, 8],
    ],
    weightsBottom: [
      [9, 10, 11, 12],
      [13, 14, 15, 16],
    ],
    // prettier-ignore
    minimumTree: [[[0, 0],[0, 1]],[[0, 1],[0, 2]],[[0, 2],[0, 3]],[[0, 0],[1, 0]],[[1, 0],[1, 1]],[[1, 1],[1, 2]],[[1, 2],[1, 3]],[[1, 0],[2, 0]],[[2, 0],[2, 1]],[[2, 1],[2, 2]],[[2, 2],[2, 3]]],
    desc: 'finds minimum spanning tree',
  },
  {
    h: 10,
    w: 10,
    weightsRight: [
      [6, 29, 59, 94, 41, 65, 53, 20, 49],
      [56, 14, 28, 81, 42, 51, 7, 99, 98],
      [26, 96, 79, 46, 37, 86, 15, 11, 74],
      [9, 77, 90, 16, 32, 18, 24, 35, 55],
      [13, 39, 60, 48, 17, 68, 19, 54, 23],
      [2, 95, 31, 84, 92, 45, 71, 63, 73],
      [78, 91, 1, 61, 3, 67, 38, 97, 22],
      [82, 43, 0, 10, 4, 64, 34, 27, 83],
      [44, 57, 87, 88, 36, 25, 12, 5, 75],
      [52, 30, 70, 8, 58, 85, 33, 62, 69],
    ],
    weightsBottom: [
      [123, 188, 177, 198, 143, 162, 168, 197, 195, 155],
      [166, 127, 174, 128, 164, 131, 110, 103, 146, 173],
      [129, 199, 153, 184, 140, 137, 147, 192, 145, 122],
      [169, 163, 114, 101, 157, 176, 178, 102, 161, 136],
      [107, 182, 165, 134, 109, 124, 150, 185, 175, 151],
      [104, 154, 180, 118, 126, 132, 113, 186, 108, 117],
      [138, 152, 149, 111, 130, 193, 181, 120, 105, 191],
      [158, 115, 159, 167, 187, 196, 121, 135, 125, 148],
      [142, 190, 116, 156, 144, 170, 183, 189, 112, 172],
    ],
    // prettier-ignore
    minimumTree:[[[0, 0], [0, 1]], [[0, 1], [0, 2]], [[0, 2], [0, 3]], [[0, 3], [0, 4]], [[0, 4], [0, 5]], [[0, 5], [0, 6]], [[0, 6], [0, 7]], [[0, 7], [0, 8]], [[0, 8], [0, 9]], [[0, 0], [1, 0]], [[1, 0], [1, 1]], [[1, 1], [1, 2]], [[1, 2], [1, 3]], [[1, 3], [1, 4]], [[1, 4], [1, 5]], [[1, 5], [1, 6]], [[1, 6], [1, 7]], [[1, 7], [1, 8]], [[1, 8], [1, 9]], [[1, 7], [2, 7]], [[2, 7], [2, 8]], [[2, 6], [2, 7]], [[2, 8], [2, 9]], [[2, 5], [2, 6]], [[2, 4], [2, 5]], [[2, 3], [2, 4]], [[2, 2], [2, 3]], [[2, 1], [2, 2]], [[2, 0], [2, 1]], [[2, 9], [3, 9]], [[3, 8], [3, 9]], [[3, 7], [3, 8]], [[3, 6], [3, 7]], [[3, 5], [3, 6]], [[3, 4], [3, 5]], [[3, 3], [3, 4]], [[3, 2], [3, 3]], [[3, 1], [3, 2]], [[3, 0], [3, 1]], [[3, 3], [4, 3]], [[4, 3], [4, 4]], [[4, 4], [4, 5]], [[4, 2], [4, 3]], [[4, 1], [4, 2]], [[4, 0], [4, 1]], [[4, 5], [4, 6]], [[4, 6], [4, 7]], [[4, 7], [4, 8]], [[4, 8], [4, 9]], [[4, 0], [5, 0]], [[5, 0], [5, 1]], [[5, 1], [5, 2]], [[5, 2], [5, 3]], [[5, 3], [5, 4]], [[5, 4], [5, 5]], [[5, 5], [5, 6]], [[5, 6], [5, 7]], [[5, 7], [5, 8]], [[5, 8], [5, 9]], [[5, 0], [6, 0]], [[6, 0], [6, 1]], [[6, 1], [6, 2]], [[6, 2], [6, 3]], [[6, 3], [6, 4]], [[6, 4], [6, 5]], [[6, 5], [6, 6]], [[6, 6], [6, 7]], [[6, 7], [6, 8]], [[6, 8], [6, 9]], [[6, 8], [7, 8]], [[7, 7], [7, 8]], [[7, 6], [7, 7]], [[7, 5], [7, 6]], [[7, 4], [7, 5]], [[7, 3], [7, 4]], [[7, 2], [7, 3]], [[7, 1], [7, 2]], [[7, 0], [7, 1]], [[7, 8], [7, 9]], [[7, 1], [8, 1]], [[8, 0], [8, 1]], [[8, 1], [8, 2]], [[8, 2], [8, 3]], [[8, 3], [8, 4]], [[8, 4], [8, 5]], [[8, 5], [8, 6]], [[8, 6], [8, 7]], [[8, 7], [8, 8]], [[8, 8], [8, 9]], [[8, 8], [9, 8]], [[9, 7], [9, 8]], [[9, 6], [9, 7]], [[9, 8], [9, 9]], [[9, 5], [9, 6]], [[9, 4], [9, 5]], [[9, 3], [9, 4]], [[9, 2], [9, 3]], [[9, 1], [9, 2]], [[9, 0], [9, 1]]],
    desc: 'finds minimum spanning tree on big maze (1)',
  },
  {
    h: 10,
    w: 10,
    weightsRight: [
      [6, 29, 59, 94, 41, 65, 53, 20, 49],
      [56, 14, 28, 81, 104, 154, 180, 118, 126],
      [26, 165, 134, 109, 37, 86, 15, 11, 74],
      [9, 77, 90, 16, 32, 18, 24, 35, 55],
      [107, 182, 96, 79, 46, 124, 150, 185, 175],
      [2, 95, 31, 84, 92, 45, 71, 63, 73],
      [78, 91, 116, 156, 144, 170, 38, 97, 22],
      [127, 174, 128, 164, 131, 110, 103, 146, 173],
      [115, 159, 167, 187, 196, 121, 135, 125, 148],
      [52, 30, 70, 8, 58, 85, 33, 62, 69],
    ],
    weightsBottom: [
      [123, 188, 177, 198, 143, 162, 168, 197, 195, 155],
      [82, 43, 0, 10, 4, 166, 64, 34, 27, 83],
      [129, 199, 54, 23, 151, 137, 147, 192, 145, 122],
      [169, 163, 114, 101, 157, 176, 178, 102, 161, 136],
      [13, 39, 60, 48, 17, 132, 19, 153, 184, 140],
      [42, 51, 7, 99, 98, 68, 113, 186, 108, 117],
      [138, 152, 87, 88, 36, 193, 181, 120, 105, 191],
      [158, 44, 57, 149, 111, 130, 25, 12, 5, 75],
      [142, 190, 1, 61, 3, 67, 183, 189, 112, 172],
    ],
    // prettier-ignore
    minimumTree:[[[0, 0], [0, 1]], [[0, 1], [0, 2]], [[0, 2], [0, 3]], [[0, 3], [0, 4]], [[0, 4], [0, 5]], [[0, 5], [0, 6]], [[0, 6], [0, 7]], [[0, 7], [0, 8]], [[0, 8], [0, 9]], [[0, 0], [1, 0]], [[1, 0], [1, 1]], [[1, 1], [1, 2]], [[1, 2], [2, 2]], [[1, 2], [1, 3]], [[1, 3], [2, 3]], [[2, 3], [3, 3]], [[3, 3], [3, 4]], [[3, 4], [3, 5]], [[3, 5], [3, 6]], [[3, 6], [3, 7]], [[3, 7], [3, 8]], [[1, 1], [2, 1]], [[2, 0], [2, 1]], [[2, 2], [3, 2]], [[3, 8], [3, 9]], [[3, 1], [3, 2]], [[3, 0], [3, 1]], [[1, 3], [1, 4]], [[1, 4], [2, 4]], [[2, 4], [2, 5]], [[2, 5], [2, 6]], [[2, 6], [2, 7]], [[2, 7], [2, 8]], [[1, 8], [2, 8]], [[1, 7], [2, 7]], [[1, 6], [2, 6]], [[2, 8], [2, 9]], [[1, 9], [2, 9]], [[3, 3], [4, 3]], [[4, 3], [5, 3]], [[5, 2], [5, 3]], [[5, 2], [6, 2]], [[4, 2], [5, 2]], [[4, 3], [4, 4]], [[4, 4], [5, 4]], [[4, 4], [4, 5]], [[6, 2], [7, 2]], [[7, 2], [8, 2]], [[8, 2], [9, 2]], [[9, 1], [9, 2]], [[9, 0], [9, 1]], [[9, 2], [9, 3]], [[9, 3], [9, 4]], [[8, 4], [9, 4]], [[9, 4], [9, 5]], [[8, 3], [9, 3]], [[8, 5], [9, 5]], [[9, 5], [9, 6]], [[9, 6], [9, 7]], [[9, 7], [9, 8]], [[9, 8], [9, 9]], [[6, 1], [6, 2]], [[5, 1], [6, 1]], [[5, 0], [5, 1]], [[4, 0], [5, 0]], [[4, 1], [5, 1]], [[5, 0], [6, 0]], [[5, 4], [5, 5]], [[5, 5], [5, 6]], [[4, 6], [5, 6]], [[5, 5], [6, 5]], [[5, 6], [5, 7]], [[5, 7], [5, 8]], [[5, 8], [5, 9]], [[5, 4], [6, 4]], [[6, 4], [7, 4]], [[5, 3], [6, 3]], [[6, 3], [7, 3]], [[3, 7], [4, 7]], [[1, 4], [1, 5]], [[5, 8], [6, 8]], [[6, 8], [6, 9]], [[6, 7], [6, 8]], [[6, 6], [6, 7]], [[6, 8], [7, 8]], [[7, 8], [8, 8]], [[6, 7], [7, 7]], [[7, 7], [8, 7]], [[7, 6], [7, 7]], [[7, 6], [8, 6]], [[7, 5], [7, 6]], [[3, 9], [4, 9]], [[6, 0], [7, 0]], [[7, 0], [7, 1]], [[7, 1], [8, 1]], [[8, 0], [8, 1]], [[8, 8], [8, 9]], [[7, 9], [8, 9]], [[3, 8], [4, 8]]],
    desc: 'finds minimum spanning tree on big maze (2)',
  },
];
